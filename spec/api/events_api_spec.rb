=begin
#Logistic Tracking service API - DCSA OpenAPI specification for Track & Trace v2.2.0

#Managing and sending Shipment-, Transport- and Equipment-events and subscriptions for Track &amp; Trace (T&amp;T). API specification issued by DCSA.org.  <i>Please note that shipment events and subscription management are not covered yet by CMA CGM API.</i>  <br> This API is accessible through <ul> <li> <b> Public </b> connection (authentication with API Key): this allows to retrieve standard equipment moves (e.g. ready to be loaded, discharged), Transhipment moves (e.g. discharged and re-loaded onboard) and planned vessel departure and arrival dates. </li> <li> <b> Private </b> connection (authentication with Oauth2 client credentials): this allows to retrieve additional private events such as actual rail and ramp moves, planned departure and arrival dates for inland moves. These private events are available only if you (or your end customer) are identified on the booking as: Booking Party, Deciding Party, Consignee, Notifier or Shipper. </li> </ul> </br> For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2021/10/202108_DCSA_P1_Information-Model-v3.3_TNT22_Final.pdf'>Information Model v3.3</a> Polling can be done on the <b>GET /events</b> endPoint. DCSA version 2.2.0

The version of the OpenAPI document: 2.2.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CMACGMClient::EventsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @api_instance = CMACGMClient::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@api_instance).to be_instance_of(CMACGMClient::EventsApi)
    end
  end

  # unit tests for get_move_on_commercial_cycle
  # Find Commercial events from unique tracking greference.
  # Return commercial cycle belonging to provided tracking reference &lt;b&gt;Query is not DCSA compliant but Return data follow DCSA TNT 2.2.0 specifications&lt;/b&gt;
  # @param tracking_reference Shipment reference or Equipment identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :behalf_of (Mandatory if you are a Third Party). This field specifies the end customer code you request a rate for. Use our referential API Partner to check if the end customer exists and to get its Partner ID code
  # @option opts [Integer] :limit Maximum number of items to return.
  # @option opts [String] :cursor A server generated value to specify a specific point in a collection result, used for pagination.
  # @return [Array<SearchMoveOnCommercialCycle200ResponseInner>]
  describe 'get_move_on_commercial_cycle test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for search_move_on_commercial_cycle
  # Find Commercial events.
  # Returns all events filtered by the queryParameters. &lt;b&gt;NB&lt;/b&gt;&amp;#58; It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting. Example&amp;#58; &lt;i&gt;shipmentEventTypeCode&#x3D;DRFT and equipmentEventTypeCode&#x3D;GTIN&lt;/i&gt; Since there is no event that can be a ShipmentEvent &lt;u&gt;and&lt;/u&gt; an EquipmentEvent at the same time &lt;b&gt;this will return an empty list&lt;/b&gt;! &lt;b&gt;Follow DCSA TNT 2.2.0 specifications&lt;/b&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :event_type The type of event(s) to filter by. Possible values are - SHIPMENT (Shipment events) - TRANSPORT (Transport events) - EQUIPMENT (Equipment events) It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example eventType&#x3D;SHIPMENT,EQUIPMENT matches both Shipment- and Equipment-events. Default value is all event types.
  # @option opts [Array<ShipmentEventTypeCode>] :shipment_event_type_code The status of the document in the process to filter by. Possible values are - RECE (Received) - DRFT (Drafted) - PENA (Pending Approval) - PENU (Pending Update) - REJE (Rejected) - APPR (Approved) - ISSU (Issued) - SURR (Surrendered) - SUBM (Submitted) - VOID (Void) - CONF (Confirmed) - REQS (Requested) - CMPL (Completed) - HOLD (On Hold) - RELS (Released) It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example &lt;i&gt;shipmentEventTypeCode&#x3D;RECE,DRFT&lt;/i&gt;  Matches &lt;b&gt;both&lt;/b&gt; Received (RECE) and Drafted (DRFT) shipment events. Default is all shipmentEventTypeCodes. This filter is only relevant when filtering on ShipmentEvents
  # @option opts [Array<DocumentTypeCode>] :document_type_code The documentTypeCode to filter by. Possible values are - CBR (Carrier Booking Request Reference) - BKG (Booking) - SHI (Shipping Instruction) - SRM (Shipment Release Message) - TRD (Transport Document) - ARN (Arrival Notice) - VGM (Verified Gross Mass) - CAS (Cargo Survey) - CUS (Customs Inspection) - DGD (Dangerous Goods Declaration) - OOG (Out of Gauge) It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example &lt;i&gt;documentTypeCode&#x3D;SHI,TRD&lt;/i&gt; Matches &lt;b&gt;both&lt;/b&gt; ShippingInstruction (SHI) and TransportDocument (TRD) shipment events. Default is all documentTypeCodes. This filter is only relevant when filtering on ShipmentEvents
  # @option opts [String] :carrier_booking_reference A set of unique characters provided by carrier to identify a booking. Specifying this filter will only return events related to this particular carrierBookingReference.
  # @option opts [String] :transport_document_reference A unique number reference allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment. Specifying this filter will only return events related to this particular transportDocumentReference
  # @option opts [Array<TransportEventTypeCode>] :transport_event_type_code Identifier for type of Transport event to filter by - ARRI (Arrived) - DEPA (Departed) It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example &lt;i&gt;transportEventTypeCode&#x3D;ARRI,DEPA&lt;/i&gt; matches &lt;b&gt;both&lt;/b&gt; Arrived (ARRI) and Departed (DEPA) transport events. Default is all transportEventTypeCodes. This filter is only relevant when filtering on TransportEvents
  # @option opts [String] :transport_call_id ID uniquely identifying a transport call, to filter events by. Specifying this filter will only return events related to this particular transportCallID
  # @option opts [String] :vessel_imo_number The identifier of vessel for which schedule details are published. Depending on schedule type, this may not be available yet. Specifying this filter will only return events related to this particular vesselIMONumber.
  # @option opts [String] :export_voyage_number Filter on the vessel operator-specific identifier of the export Voyage. Specifying this filter will only return events related to this particular exportVoyageNumber.
  # @option opts [String] :carrier_service_code Filter on the carrier specific identifier of the service. Specifying this filter will only return events related to this particular carrierServiceCode.
  # @option opts [String] :un_location_code The UN Location code specifying where the place is located. Specifying this filter will only return events related to this particular UN Location code.
  # @option opts [Array<EquipmentEventTypeCode>] :equipment_event_type_code Unique identifier for equipmentEventTypeCode. - LOAD (Loaded) - DISC (Discharged) - GTIN (Gated in) - GTOT (Gated out) - STUF (Stuffed) - STRP (Stripped) - PICK (Pick-up) - DROP (Drop-off) - INSP (Inspected) - RSEA (Resealed) - RMVD (Removed) It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example &lt;i&gt;equipmentEventTypeCode&#x3D;GTIN,GTOT&lt;/i&gt; matches &lt;b&gt;both&lt;/b&gt; Gated in (GTIN) and Gated out (GTOT) equipment events. Default is all equipmentEventTypeCodes. This filter is only relevant when filtering on EquipmentEvents
  # @option opts [String] :equipment_reference Will filter by the unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible. Specifying this filter will only return events related to this particular equipmentReference
  # @option opts [Time] :event_created_date_time Limit the result based on the creating date of the event. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the &#x3D;) &lt;i&gt;eventCreatedDateTime&lt;b&gt;&amp;#58;gte&lt;/b&gt;&#x3D;2021-04-01T14&amp;#58;12&amp;#58;56+01&amp;#58;00&lt;/i&gt; would result in all events created &amp;#8805; 2021-04-01T14&amp;#58;12&amp;#58;56+01&amp;#58;00 The following operators are supported - &amp;#58;gte (&amp;#8805; Greater than or equal) - &amp;#58;gt (&amp;#62; Greater than) - &amp;#58;lte (&amp;#8804; Less than or equal) - &amp;#58;lt (&amp;#60; Less than) - &amp;#58;eq (&amp;#61; Equal to) If no operator is provided, a &lt;b&gt;strictly equal&lt;/b&gt; is used (this is equivalent to &lt;b&gt;&amp;#58;eq&lt;/b&gt; operator).
  # @option opts [Time] :event_date_time not DCSA - when search is done by container reference , allow to search the last container cycle happening before the provided date
  # @option opts [String] :behalf_of (Mandatory if you are a Third Party). This field specifies the end customer code you request a rate for. Use our referential API Partner to check if the end customer exists and to get its Partner ID code -- Not a standard DCSA attribute
  # @option opts [Integer] :limit Maximum number of items to return.
  # @option opts [String] :cursor A server generated value to specify a specific point in a collection result, used for pagination.
  # @return [Array<SearchMoveOnCommercialCycle200ResponseInner>]
  describe 'search_move_on_commercial_cycle test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
